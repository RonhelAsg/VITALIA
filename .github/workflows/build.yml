name: 🚀 Build Flutter APK - Latest Versions

on:
  push:
    branches: [ main, master, develop ]
  pull_request:
    branches: [ main, master ]

env:
  FLUTTER_VERSION: '3.25.0'  # Dernière stable Oct 2024
  KOTLIN_VERSION: '1.9.22'   # Dernière stable Kotlin
  JAVA_VERSION: '21'          # LTS 2023
  GRADLE_VERSION: '8.7'       # Dernière stable

jobs:
  build:
    name: 🏗️ Build APK Release
    runs-on: ubuntu-latest

    steps:
    # Étape 1: Checkout du code
    - name: 📥 Checkout code
      uses: actions/checkout@v4

    # Étape 2: Configuration Java 21 LTS
    - name: ☕ Setup Java ${{ env.JAVA_VERSION }}
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: ${{ env.JAVA_VERSION }}
        cache: 'gradle'

    # Étape 3: Configuration Android SDK
    - name: 🤖 Setup Android SDK
      uses: android-actions/setup-android@v3
      with:
        api-level: 34          # Android 14
        build-tools-version: '34.0.0'
        cmake-version: '3.22.1'
        ndk-version: '25.2.9519653'

    # Étape 4: Configuration Flutter dernière version
    - name: 📱 Setup Flutter ${{ env.FLUTTER_VERSION }}
      uses: subosito/flutter-action@v2
      with:
        flutter-version: ${{ env.FLUTTER_VERSION }}
        channel: 'stable'
        cache: true
        cache-key: flutter-${{ env.FLUTTER_VERSION }}
        cache-path: ${{ github.workspace }}/.pub-cache

    # Étape 5: Acceptation des licenses Android
    - name: 📝 Accept Android Licenses
      run: |
        yes | sdkmanager --licenses || true
        flutter doctor --android-licenses --verbose

    # Étape 6: Informations de debug
    - name: 🔍 Debug Information
      run: |
        echo "=== VERSIONS ==="
        flutter --version
        echo "=== DART ==="
        dart --version
        echo "=== JAVA ==="
        java -version
        echo "=== ANDROID SDK ==="
        sdkmanager --list | head -20

    # Étape 7: Vérification de l'environnement
    - name: 🩺 Flutter Doctor
      run: flutter doctor -v

    # Étape 8: Mise à jour de Kotlin dans le projet (AUTO)
    - name: 🔄 Upgrade Kotlin to ${{ env.KOTLIN_VERSION }}
      run: |
        # Mise à jour automatique de Kotlin dans build.gradle
        sed -i 's/ext.kotlin_version = [\"'\'']1\.[0-9]\+\.[0-9]\+[\"'\'']/ext.kotlin_version = "'$KOTLIN_VERSION'"/' android/build.gradle 2>/dev/null || true
        
        # Alternative pour settings.gradle
        sed -i 's/id '\''org.jetbrains.kotlin.android'\'' version [\"'\'']1\.[0-9]\+\.[0-9]\+[\"'\'']/id '\''org.jetbrains.kotlin.android'\'' version "'$KOTLIN_VERSION'"/' android/settings.gradle 2>/dev/null || true
        
        echo "✅ Kotlin upgraded to $KOTLIN_VERSION"

    # Étape 9: Nettoyage et installation
    - name: 🧹 Clean & Install Dependencies
      run: |
        flutter clean
        flutter pub get
        cd android && ./gradlew clean && cd ..

    # Étape 10: Build APK Release
    - name: 🏗️ Build APK Release
      run: |
        flutter build apk --release \
          --dart-define=BUILD_ENV=production \
          --dart-define=BUILD_VERSION=${{ github.run_number }} \
          --verbose

    # Étape 11: Build AAB (Bonus pour Play Store)
    - name: 📦 Build AAB Bundle
      run: |
        flutter build appbundle --release \
          --dart-define=BUILD_ENV=production \
          --dart-define=BUILD_VERSION=${{ github.run_number }}

    # Étape 12: Upload des artefacts
    - name: 📤 Upload Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: flutter-build-${{ github.run_number }}
        path: |
          build/app/outputs/flutter-apk/app-release.apk
          build/app/outputs/bundle/release/app-release.aab
        retention-days: 30
        compression-level: 9

    # Étape 13: Notification de succès
    - name: ✅ Build Success
      if: success()
      run: |
        echo "🎉 BUILD SUCCESSFUL!"
        echo "📱 APK: app-release.apk"
        echo "🏪 AAB: app-release.aab"
        echo "🔢 Build: ${{ github.run_number }}"

  security-scan:
    name: 🔒 Security Scan
    runs-on: ubuntu-latest
    needs: build
    if: always()

    steps:
    - name: 📥 Download Artifact
      uses: actions/download-artifact@v4
      with:
        name: flutter-build-${{ github.run_number }}

    - name: 🔍 APK Analysis
      run: |
        echo "📊 APK File Info:"
        file app-release.apk || true
        echo "📦 APK Size:"
        du -h app-release.apk || true
